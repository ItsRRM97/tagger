% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tag_pos.R
\name{tag_pos}
\alias{tag_pos}
\title{Tag Text with Parts of Speech}
\usage{
tag_pos(text.var, engine = "openNLP", element.chunks = floor(2000 *
  (23.5/mean(sapply(text.var, nchar), na.rm = TRUE))), ...)
}
\arguments{
\item{text.var}{The text string variable.}

\item{engine}{The backend pat of speech tagger, either "openNLP" or "coreNLP".
The default "openNLP" uses the \pkg{openNLP} package.  If the user has the
Stanford CoreNLP suite (\file{http://stanfordnlp.github.io/CoreNLP/})
installed this can be used as the tagging backend instead.}

\item{element.chunks}{The number of elements to include in a chunk. Chunks are
passed through an \code{\link[base]{lapply}} and size is kept within a tolerance
because of memory allocation in the tagging process with \pkg{Java}.}

\item{\ldots}{Other arguments passed to \code{tagger:::core_tagger} including
\code{stanford.tagger = stansent::coreNLP_loc()} and \code{java.path}, the
path to \pkg{CoreNLP} and \pkg{Java} respectively.  Use
\code{\link[tagger]{check_setup}} to check that \pkg{Java} is installed and
of correct version and that Stanford's \pkg{CoreNLP} is installed and in root.}
}
\value{
Returns a list of part of speech tagged vectors.  The pretty printing
does not indicated this feature, but the words and parts of speech are easily
accessible through indexing.
}
\description{
A wrapper for \pkg{NLP} and \pkg{openNLP} to easily tag text with parts of
speech.  The \pkg{openNLP} annotator "computes Penn Treebank parse annotations
using the Apache OpenNLP chunking parser for English."
}
\examples{
(x <- tag_pos("They refuse to permit us to obtain the refuse permit"))
c(x) ## The true structure of a `tag_pos` object

(out1 <- tag_pos(sam_i_am))
tidy_pos(out1)
as_word_tag(out1)
count_tags(out1)
as_basic(out1)
as_universal(out1)
plot(out1)
\dontrun{
(out2 <- tag_pos(presidential_debates_2012$dialogue)) # ~40 sec run time
count_tags(out2)
count_tags(out2, by = presidential_debates_2012$person)
with(presidential_debates_2012, count_tags(out2, by = list(person, time)))
plot(out2)

## CoreNLP
tag_pos(sam_i_am, engine = 'coreNLP')
}
}
